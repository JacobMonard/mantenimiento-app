# .github/workflows/deploy.yml

name: Deploy Flutter Web to GitHub Pages

on:
  push:
    branches:
      - main # Este workflow se ejecutará cada vez que haya un push a la rama 'main'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest # Elige un runner (máquina virtual) para ejecutar el job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Descarga tu código del repositorio

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0' # Puedes especificar tu versión de Flutter, ej. '3.19.6' o '3.x.x' para la última 3.x

      - name: Get Flutter dependencies
        run: flutter pub get # Descarga las dependencias de Flutter

      - name: Build Flutter web app
        run: flutter build web --release --base-href "/mantenimiento-app/" # Construye la app web en modo release, con la base-href correcta
        # --release es importante para la versión final, es más pequeña y rápida

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main' # Solo despliega si el push es a la rama 'main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # Token de GitHub, no necesitas configurarlo, ya viene por defecto
          publish_dir: ./build/web # La carpeta que contiene los archivos a publicar
          publish_branch: gh-pages # La rama a la que se publicarán los archivos (tu rama gh-pages)
          force_orphan: true # Esto limpia la rama gh-pages antes de publicar